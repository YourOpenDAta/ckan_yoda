version: "3.5"
services:
  mongo:
    image: mongo:${MONGO_VERSION}
    container_name: mongo_yoda
    command: --nojournal
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
    volumes: 
      - mongo-db-data:/data/db 
    networks:
      - ckan_yoda
    restart: unless-stopped

  orion:
    image: fiware/orion-ld:${ORION_VERSION}
    container_name: orion_yoda
    depends_on:
      - mongo
    command: -dbhost mongo
    # ports:
    #   - "${ORION_PORT}:1026"
    expose:
      - 1026
    environment:
      ORIONLD_MONGO_USER: ${MONGO_ROOT_USERNAME}
      ORIONLD_MONGO_PASSWORD: ${MONGO_ROOT_PASSWORD}
    networks:
      - ckan_yoda
    restart: unless-stopped
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1

  draco:
    #image: ging/fiware-draco:${DRACO_VERSION}
    build:
      context: ./draco
      args:
        DRACO_VERSION: ${DRACO_VERSION}
    container_name: draco_yoda
    depends_on:
      - orion
    ports:
      - "${DRACO_WEB_PORT}:${DRACO_WEB_PORT}"
      - "${DRACO_PORT}:5050"
    environment:
      - NIFI_WEB_HTTP_PORT=${DRACO_WEB_PORT}
    networks:
      - ckan_yoda
    restart: unless-stopped
    healthcheck:
      test: curl --fail -s http://draco:${DRACO_WEB_PORT}/nifi-api/system-diagnostics || exit 1
      start_period: 1m
  

volumes: 
  mongo-db-data:

networks:
  ckan_yoda:
    external:
      name: ckan_yoda
